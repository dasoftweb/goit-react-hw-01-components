{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendListItem/FriendListItem.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/defaultAvatar.png","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","styles","profile","description","src","alt","label","quantity","followers","views","likes","defaultProps","defaultAvatar","Statistics","title","getRandomColor","r","Math","random","statistics","map","id","percentage","item","style","backgroundColor","FriendListItem","isOnline","statusClass","online","offline","width","FriendList","friends","TransactionHistory","items","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb37473a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"primary-text-color\":\"#152335\",\"secondary-text-color\":\"#84909D\",\"secondary-color\":\"#F3F6F9\",\"profile\":\"Profile_profile__3gaVd\",\"description\":\"Profile_description__1UD1_\",\"avatar\":\"Profile_avatar__1Cy0w\",\"name\":\"Profile_name__5_spG\",\"tag\":\"Profile_tag__bD6DZ\",\"location\":\"Profile_location__1-iEI\",\"stats\":\"Profile_stats__2pvXW\",\"label\":\"Profile_label__oAZ_O\",\"quantity\":\"Profile_quantity__16pM_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"secondary-text-color\":\"#84909D\",\"statistics\":\"Statistics_statistics__2nFnD\",\"title\":\"Statistics_title__QHlyy\",\"stat-list\":\"Statistics_stat-list__2XVZ2\",\"item\":\"Statistics_item__1wxm4\",\"label\":\"Statistics_label__1iwUO\",\"percentage\":\"Statistics_percentage__6h4iJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primary-text-color\":\"#152335\",\"item\":\"FriendListItem_item__1ciko\",\"status\":\"FriendListItem_status__OhLwk\",\"online\":\"FriendListItem_online__4vHRY FriendListItem_status__OhLwk\",\"offline\":\"FriendListItem_offline__rPWr9 FriendListItem_status__OhLwk\",\"avatar\":\"FriendListItem_avatar__RVIjC\",\"name\":\"FriendListItem_name__2fnEM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend-list\":\"FriendList_friend-list__1hdVc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"secondary-text-color\":\"#84909D\",\"transaction-history\":\"TransactionHistory_transaction-history__2Q8bm\"};","export default __webpack_public_path__ + \"static/media/defaultAvatar.deeebbe3.png\";","import PropTypes from 'prop-types';\r\nimport defaultAvatar from './defaultAvatar.png';\r\nimport styles from './Profile.module.css';\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => {\r\n  return (\r\n    <div className={styles.profile}>\r\n      <div className={styles.description}>\r\n        <img className={styles.avatar} src={avatar} alt=\"Аватар пользователя\" />\r\n        <p className={styles.name}>{name}</p>\r\n        <p className={styles.tag}>@{tag}</p>\r\n        <p className={styles.location}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={styles.stats}>\r\n        <li>\r\n          <span className={styles.label}>Followers</span>\r\n          <span className={styles.quantity}>{stats.followers}</span>\r\n        </li>\r\n        <li>\r\n          <span className={styles.label}>Views</span>\r\n          <span className={styles.quantity}>{stats.views}</span>\r\n        </li>\r\n        <li>\r\n          <span className={styles.label}>Likes</span>\r\n          <span className={styles.quantity}>{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.defaultProps = {\r\n  avatar: defaultAvatar,\r\n};\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string,\r\n  stats: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Profile;\r\n","import PropTypes from \"prop-types\";\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ title, stats }) => {\r\n  function getRandomColor() {\r\n    const r = () => (Math.random() * 256) >> 0;\r\n    const color = `rgb(${r()}, ${r()}, ${r()})`;\r\n    return color;\r\n  }\r\n\r\n  return (\r\n    <section className={styles.statistics}>\r\n      {title && <h2 className={styles.title}>{title}</h2>}\r\n      <ul className={styles[\"stat-list\"]}>\r\n        {stats.map(({ id, label, percentage }) => (\r\n          <li key={id} className={styles.item} style={{ backgroundColor: getRandomColor() }}>\r\n            <span className={styles.label}>{label}</span>\r\n            <span className={styles.percentage}>{percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './FriendListItem.module.css';\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline, id }) => {\r\n  const statusClass = isOnline ? styles.online : styles.offline;\r\n  return (\r\n    <li className={styles.item}>\r\n      <span className={statusClass}>{isOnline}</span>\r\n      <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\r\n      <p className={styles.name}>{name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default FriendListItem;\r\n","import PropTypes from \"prop-types\";\r\nimport FriendListItem from \"../FriendListItem/FriendListItem\";\r\nimport styles from './FriendList.module.css';\r\n\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <ul className={styles[\"friend-list\"]}>\r\n      {friends.map(({ avatar, name, isOnline, id }) => (\r\n        <FriendListItem\r\n          key={id}\r\n          avatar={avatar}\r\n          name={name}\r\n          isOnline={isOnline}\r\n          id={id}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default FriendList;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  return (\r\n    <table className={styles['transaction-history']}>\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {items.map(({ id, type, amount, currency }) => (\r\n          <tr key={id}>\r\n            <td>{type}</td>\r\n            <td>{amount}</td>\r\n            <td>{currency}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default TransactionHistory;\r\n","// Components\r\nimport Profile from './components/Profile/Profile';\r\nimport Statistics from './components/Statistics/Statistics';\r\nimport FriendList from './components/FriendList/FriendList';\r\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\r\n\r\n// Data\r\nimport user from './data/user.json';\r\nimport statisticalData from './data/statistical-data.json';\r\nimport friends from './data/friends.json';\r\nimport transactions from './data/transactions.json';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Profile\r\n        name={user.name}\r\n        tag={user.tag}\r\n        location={user.location}\r\n        avatar={user.avatar}\r\n        stats={user.stats}\r\n      />\r\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\r\n      {/* <Statistics stats={statisticalData} />; */}\r\n      <FriendList friends={friends} />\r\n      <TransactionHistory items={transactions} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import 'modern-normalize/modern-normalize.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}